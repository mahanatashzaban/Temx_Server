version: '3.6'

services:
  peatio:
    restart: always
    image: "<%= @config['images']['peatio'] %>"
    environment:
      - VAULT_TOKEN=${PEATIO_RAILS_VAULT_TOKEN}
    env_file:
      - ../config/peatio.env
    expose:
      - "8000"
    volumes:
      - ../config/peatio/seed:/opt/peatio/config/seed
      - ../config/peatio/management_api_v1.yml:/opt/peatio/config/management_api_v1.yml
      - ../config/peatio/plugins.yml:/opt/peatio/config/plugins.yml
      - ../config/peatio/abilities.yml:/opt/peatio/config/abilities.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.peatio.rule=Host(`peatio.app.temx.org`)"
      - "traefik.http.routers.peatio.entrypoints=websecure"
      - "traefik.http.routers.peatio.tls=true"
      - "traefik.http.routers.peatio.tls.certresolver=myresolver"
      - "traefik.http.services.peatio.loadbalancer.server.port=8000"
    command: bash -c "bin/link_config && bundle exec puma --config config/puma.rb"

  barong:
    restart: always
    image: "<%= @config['images']['barong'] %>"
    env_file:
      - ../config/barong.env
    volumes:
      - /home/app/opendax/config/secrets:/secrets:ro
      - /home/app/opendax/config/barong/seeds.yml:/home/app/config/seeds.yml
      - /home/app/opendax/config/barong/barong.yml:/home/app/config/barong.yml
      - /home/app/opendax/config/barong/authz_rules.yml:/home/app/config/authz_rules.yml
      - /home/app/opendax/config/barong/management_api.yml:/home/app/config/management_api.yml
      - /home/app/opendax/config/barong/abilities.yml:/home/app/config/abilities.yml

    expose:
      - "8001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.barong.rule=Host(`barong.app.temx.org`)"
      - "traefik.http.routers.barong.entrypoints=websecure"
      - "traefik.http.routers.barong.tls=true"
      - "traefik.http.routers.barong.tls.certresolver=myresolver"
      - "traefik.http.services.barong.loadbalancer.server.port=8001"

<% if @config['finex']['enabled'] %>
  finex-api:
    restart: always
    image: "<%= @config['finex']['image'] %>"
    command: "./orderapi"
    volumes:
      - ../config/finex:/app/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.finex-api.rule=Host(`finex-api.app.temx.org`)"
      - "traefik.http.routers.finex-api.entrypoints=web"
      - "traefik.http.services.finex-api.loadbalancer.server.port=8000"

  finex-engine:
    restart: always
    image: "<%= @config['finex']['image'] %>"
    command: "./finex"
    volumes:
      - ../config/finex:/app/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.finex-engine.rule=Host(`finex-engine.app.temx.org`)"
      - "traefik.http.routers.finex-engine.entrypoints=web"
      - "traefik.http.services.finex-engine.loadbalancer.server.port=8000"
<% end %>

  applogic:
    restart: always
    image: "<%= @utils['images']['applogic'] %>"
    env_file:
      - ../config/applogic.env
    expose:
      - "8081"
    volumes:
      - ../config/applogic/management_api_v2.yml:/home/app/config/management_api_v2.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.applogic.rule=Host(`applogic.app.temx.org`)"
      - "traefik.http.routers.applogic.entrypoints=websecure"
      - "traefik.http.routers.applogic.tls=true"
      - "traefik.http.routers.applogic.tls.certresolver=myresolver"
      - "traefik.http.services.applogic.loadbalancer.server.port=8081"

